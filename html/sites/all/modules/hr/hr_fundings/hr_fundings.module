<?php
/**
 * @file
 * Code for the Fundings feature.
 */

include_once 'hr_fundings.features.inc';

/**
 * Implements hook_cron()
 * Synchronizes the appeals with the FTS
 */
function hr_fundings_cron() {
  $years = array();
  $current = date('Y');
  for($i = 2010; $i <= $current; $i++) {
    $appeals = fts_get_appeals($i);
    foreach ($appeals as $appeal) {
      if ($appeal->type != 'NON-CAP' && $appeal->type != 'n/a') {
        // Does this appeal already exist ?
        $query = new EntityFieldQuery();
        $results = $query->entityCondition('entity_type', 'node')
          ->entityCondition('bundle', 'hr_funding')
          ->fieldCondition('field_appeal_id', 'value', $appeal->id, '=')
          ->execute();
        if (!isset($results['node'])) {
          $type = _hr_fundings_map_fts_appeal_type($appeal->type);
          if ($type != NULL) {
            // Create appeal
            $node = new stdClass();
            $node->type = 'hr_funding';
            $node->language = 'en';
            $node->title = $appeal->title;
            $node->field_appeal_id = array(LANGUAGE_NONE => array(0 => array('value' => $appeal->id)));
            $node->field_funding_type = array(LANGUAGE_NONE => array(0 => array('target_id' => $type->tid)));
            $node->{OG_CONTENT_ACCESS_FIELD} = array(LANGUAGE_NONE => array(0 => array('value' => OG_CONTENT_ACCESS_PUBLIC)));
            $node->path = array('pathauto' => TRUE);
            $node->uid = 1;
            $node->og_group_ref = array();
            $hr_country = _hr_fundings_map_fts_country($appeal->country);
            $nid = _hr_disasters_get_operation_by_name($hr_country);
            if (!empty($nid)) {
              $node->og_group_ref[LANGUAGE_NONE][0]['target_id'] = $nid;
            }
            node_save($node);
          }
        }
      }
    }
  }
}

function _hr_fundings_map_fts_appeal_type($type) {
  $term_name = '';
  $mapping = variable_get('hr_fundings_mapping', array(
    'CERF' => 'Central Emergency Response Fund (CERF)',
    'CHAP' => 'Common Humanitarian Action Plan (CHAP)',
    'CAPOLD' => 'Consolidated Appeal (CAP)',
    'CAP' => 'Consolidated Appeal Process (CAP)',
    'FTS' => 'Financial Tracking (FTS)',
    'FLASH' => 'Flash Appeal',
    'HRP' => 'Humanitarian Response Plan (HRP)',
    'POOLED' => 'Pooled Fund',
    'SRP' => 'Strategic Response Plan',
    'RRP Detail' => 'Regional Response Plan (RRP)',
  ));
  
  if (isset($mapping[$type])) {
    $term_name = $mapping[$type];
  }

  if (!empty($term_name)) {
    return reset(taxonomy_get_term_by_name($term_name, 'hr_funding_type'));
  }
  else {
    return NULL;
  }
}

function _hr_fundings_map_fts_country($country) {
  $hr_country = $country;
  switch ($country) {
    case 'Congo, Democratic Republic of the':
      $hr_country = 'Democratic Republic of Congo';
      break;
    case 'Palestinian territory, occupied':
      $hr_country = 'occupied Palestinian Territory';
      break;
    case 'Congo, Republic of':
      $hr_country = 'Congo';
      break;
    case 'Syrian Arab Republic':
      $hr_country = 'Syria';
      break;
    case "Cote d'Ivoire":
      $hr_country = 'Ivory Coast';
      break;
  }
  return $hr_country;
}

