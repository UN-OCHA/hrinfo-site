<?php
/**
 * @file link_icons.module
 */

/**
 * Implements hook_field_formatter_info().
 */
function link_icons_field_formatter_info() {
  return array(
    'link_icons' => array(
      'label' => t('Service icon'),
      'field types' => array('link_field'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function link_icons_theme() {
  return array(
    'link_icons_link' => array(
      'variables' => array('element' => NULL),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function link_icons_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {

  if ($display['type'] == 'link_icons') {
    $element = array();
    $path = drupal_get_path('module', 'link_icons');
    
    foreach ($items as $delta => $item) {
      $element[$delta] = array(
        '#markup' => theme('link_icons_link', array('item' => $item, 'field' => $instance)),
        '#attached' => array(
          'css' => array($path . '/Font-Awesome-More/css/font-awesome.css'),
        ),
      );
    }
    
    return $element;
  }
}

/**
 * Theme function for link with icon.
 */
function theme_link_icons_link($vars) {
  $link_options = array(
    'html' => TRUE,
    'attributes' => array('title' => $vars['item']['title']),
  );
  
  return l('<i class="' . link_icons_get_icon($vars['item']['url']) . '"></i>', $vars['item']['url'], $link_options);
}

/**
 * Return icon name for given URL.
 */
function link_icons_get_icon($url) {
  $services = array(
    'facebook.com' => 'icon-facebook-sign',
    'twitter.com' => 'icon-twitter-sign',
    'linkedin.com' => 'icon-linkedin-sign',
    'github.com' => 'icon-github-sign',
    'pinterest.com' => 'icon-pinterest-sign',
    'google.com' => 'icon-google-plus-sign',
    // TODO: Add all icons from Font Awesome More
  );
  
  $parsed = parse_url($url);
  $chunks = explode('.', $parsed['host']);
  if (count($chunks) == 1)
    $host = $chunks[0];
  else
    $host = $chunks[count($chunks)-2] . '.' . $chunks[count($chunks)-1];
  
  if (isset($services[$host]))
    return $services[$host];
  else
    return 'icon-globe';
}






