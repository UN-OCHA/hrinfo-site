<?php
/**
 * @file
 * Generate a report containing Redis info and display.
 */

/**
 * Implements hook_menu().
 */
function redis_info_menu() {
  $items['admin/reports/redis-info'] = array(
    'title' => 'Redis Info',
    'description' => 'Redis configuration, status, usage, performance, and other statistics as provided by redis-cli info.',
    'page callback' => '_redis_info_content',
    'access arguments' => array('access site reports'),
    'weight' => 10,
  );
  return $items;
}

/**
 * Implements hook_theme().
 */
function redis_info_theme() {
  return array(
    'redis_info_output' => array(
      'variables' => array(),
    ),
  );
}

/**
 * Callback function that returns themed content.
 */
function _redis_info_content() {
  return theme('redis_info_output');
}

/**
 * Theme function for the report content.
 */
function theme_redis_info_output(&$variables) {
  $content = _redis_info_report();
  return $content;
}

/**
 * Redis report content.
 */
function _redis_info_report() {
  // Styles for the report.
  drupal_add_css(drupal_get_path('module', 'redis_info') . '/css/redis_info.css');

  // Collect redis configuration settings from settings.php if they exists.
  $redis_port_num = variable_get('redis_client_port');
  $redis_client_host = variable_get('redis_client_host');

  // Set port number or default.
  if (isset($redis_port_num)) {
    $redis_cli_port = $redis_port_num;
  }
  else {
    $redis_cli_port = 6379;
  }

  // Set host IP or default.
  if (isset($redis_client_host)) {
    $redis_cli_host = $redis_client_host;
  }
  else {
    $redis_cli_host = '127.0.0.1';
  }

  if (variable_get('redis_client_interface') == 'PhpRedis') {
    // Connect and get Redis Info: https://github.com/nicolasff/phpredis#info
    $redis = new Redis();
    $redis->connect($redis_cli_host, $redis_cli_port);
    $redis_info = $redis->info();

    // Format the info format.
    foreach ($redis_info as $key => $info) {
      $redis_report[] = "<b>$key:</b> $info";
    }
    // Build HTML list.
    $report = theme_item_list(array(
      'items' => $redis_report,
      'title' => 'PhpRedis Report',
      'type' => 'ul',
      'attributes' => array(
        'id' => 'redis-info',
      ),
    ));
  }
  elseif (variable_get('redis_client_interface') == 'Predis') {
    $client = new Predis\Client("$redis_cli_host:$redis_cli_port");
    $redis_info = $client->info('all');

    // Format the info as a list.
    foreach ($redis_info as $key => $info) {
      foreach ($info as $k => $item) {
        // Special formatting for db0.
        if ($k == 'db0') {
          $item_imp = implode($item, ', ');
          $item = $item_imp;
        }
        $items[] = "<b>$k</b>: $item";
      }
    }
    $report = theme_item_list(array(
      'items' => $items,
      'title' => 'Predis Report',
      'type' => 'ul',
      'attributes' => array(
        'id' => 'redis-info',
      ),
    ));
  }
  return $report;
}
