<?php
/**
 * @file
 * Date range picker module.
 */

/**
 * Implements hook_element_info().
 */
function daterangepicker_element_info() {
  $types = array();

  $types['daterangepicker'] = array(
    '#input' => TRUE,
    '#empty_value' => '',
    '#DateRangePicker_options' => array(
      'initial_text' => t('Select date range...'),
      'apply_button_text' => t('Apply'),
      'clear_button_text' => t('Clear'),
      'cancel_button_text' => t('Cancel'),
      'range_splitter' => ' - ',
      'date_format' => 'd M, yy',
      // This needs to be a format recognised by javascript Date.parse method.
      'alt_format' => 'yy-mm-dd',
      'date_picker_options' => array(
        'numberOfMonths' => 2,
      ),
    ),
    '#process' => array('daterangepicker_element_process'),
    '#element_validate' => array('daterangepicker_element_validate'),
    '#attached' => array(
      'library' => array(
        array('daterangepicker', 'drupal.daterangepicker'),
      ),
    ),
  );

  return $types;
}

/**
 * Add a basic textfield element and ensure moment.js is loaded.
 */
function daterangepicker_element_process($element, &$form_state, $form) {
  $options = $element['#DateRangePicker_options'];
  $element['range'] = array(
    '#type' => 'textfield',
    '#required' => ($element['#delta'] == 0 && $element['#required']) ? $element['#required'] : FALSE,
    '#attributes' => array(
      'class' => array(
        'daterangepicker',
      ),
    ),
    '#attached' => array(
      'js' => array(
        array(
          'data' => array(
            'daterangepicker' => array(
              'defaultValue' => isset($element['#default_value']) ? $element['#default_value'] : '',
              'initialText' => $options['initial_text'],
              'applyButtonText' => $options['apply_button_text'],
              'clearButtonText' => $options['clear_button_text'],
              'cancelButtonText' => $options['cancel_button_text'],
              'rangeSplitter' => $options['range_splitter'],
              'dateFormat' => $options['date_format'],
              'altFormat' => $options['alt_format'],
              'datepickerOptions' => $options['date_picker_options'],
            ),
          ),
          'type' => 'setting',
        ),
      ),
    ),
  );

  libraries_load('moment');
  return $element;
}

/**
 * An #element_validate callback for the daterangepicker element.
 */
function daterangepicker_element_validate(&$element, &$form_state) {
  if ($element['#required'] && empty($form_state['values'][$element['#name']])) {
    // @TODO: improve the validation error message display.
    // As the plugin hides the textfield and adds its own thing, the validation
    // error gets stripped out, we need to either add the right classes to the
    // plugins generated control or to guess the plugin id/class and add the
    // error there.
    $message = t('!name field is required.', array('!name' => $element['#name']));
    drupal_set_message($message);
    form_error($element,$message );
  }
}

/**
 * Implements hook_library().
 */
function daterangepicker_library() {
  $info = array();
  $library_path = daterangepicker_get_library_path();
  // jQuery Date Range Picker plugin.
  $info['jquery-ui-daterangepicker'] = array(
    'title' => 'jQuery UI DateRangePicker',
    'website' => 'http://tamble.github.io/jquery-ui-daterangepicker',
    'version' => '0.4.3',
    'js' => array(
      $library_path . '/jquery.comiseo.daterangepicker.min.js' => array('group' => 'JS_LIBRARY'),
    ),
    'css' => array(
      $library_path . '/jquery.comiseo.daterangepicker.css' => array(),
    ),
    'dependencies' => array(
      array('system', 'ui'),
      array('system', 'ui.button'),
    ),
  );

  $module_path = drupal_get_path('module', 'daterangepicker');
  $info['drupal.daterangepicker'] = array(
    'title' => 'Drupal DateRangePicker integration',
    'website' => 'https://drupal.org/project/daterangepicker',
    'version' => '1.0',
    'js' => array(
      $module_path . '/js/daterangepicker.js' => array(
        'group' => JS_DEFAULT,
        'weight' => 100,
      ),
    ),
    // Add some css so it looks a little better by default.
    'css' => array(
      $module_path . '/css/daterangepicker.css' => array(),
    ),
    'dependencies' => array(
      array('daterangepicker', 'jquery-ui-daterangepicker'),
    ),
  );

  return $info;
}

/**
 * Get the location of the Date range picker library.
 *
 * @return bool|string
 *  The location of the library, or FALSE if the library isn't installed.
 */
function daterangepicker_get_library_path() {
  if (function_exists('libraries_get_path')) {
    return libraries_get_path('daterangepicker');
  }

  // The following logic is taken from libraries_get_libraries()
  $searchdir = array();

  // Similar to 'modules' and 'themes' directories inside an installation
  // profile, installation profiles may want to place libraries into a
  // 'libraries' directory.
  $searchdir[] = 'profiles/' . drupal_get_profile() . '/libraries';

  // Always search sites/all/libraries.
  $searchdir[] = 'sites/all/libraries';

  // Also search sites/<domain>/*.
  $searchdir[] = conf_path() . '/libraries';

  foreach ($searchdir as $dir) {
    if (file_exists($dir . '/daterangepicker/jquery.comiseo.daterangepicker.min.js')) {
      return $dir . '/daterangepicker';
    }
  }

  return FALSE;
}
