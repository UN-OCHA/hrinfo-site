<?php

/**
 * @file
 * Tests for the Title module.
 */

/**
 * Tests for legacy field replacement.
 */
class FTSTestCase extends DrupalWebTestCase {
  public static function getInfo() {
    return array(
      'name' => 'FTS Test',
      'description' => 'Test FTS module.',
      'group' => 'FTS',
    );
  }
  
  function testGetAppeals() {
    $appeals = fts_get_appeals('2013');
    $message = 'A call to fts_get_appeals with a valid year should return an array';
    $this->assertTrue(is_array($appeals), $message);
    
    $appeals = fts_get_appeals('2150');
    $message = 'A call to fts_get_appeals with an invalid year should return an empty array';
    $this->assertEqual($appeals, array(), $message);
  }
  
  function testGetAppeal() {
    $appeal = fts_get_appeal(985);
    $message = 'A valid appeal id should return an appeal object';
    $this->assertTrue(is_object($appeal), $message);
    
    $message = 'A valid appeal id should return an appeal object with an id';
    $this->assertEqual($appeal->id, 985, $message);
    
    $message = 'A valid appeal id should return an appeal object with a funding';
    $this->assertNotNull($appeal->funding, $message);
    
    $appeal = fts_get_appeal(123456789);
    $message = 'An invalid appeal id should return NULL';
    $this->assertNull($appeal, $message);
  }
  
  function testGetCountries() {
    $countries = fts_get_countries();
    $message = 'A call to fts_get_countries should return an array';
    $this->assertTrue(is_array($countries), $message);
  }
  
  function testGetCountry() {
    $country = fts_get_country('MLI');
    $message = 'A valid country ISO3 should return a country object';
    $this->assertTrue(is_object($country), $message);
    
    $message = 'A valid country id should return a country object with a name';
    $this->assertEqual($country->name, 'Mali', $message);
    
    $country = fts_get_country('ISO3');
    $message = 'An invalid country ISO3 should return NULL';
    $this->assertNull($country, $message);
  }
}
