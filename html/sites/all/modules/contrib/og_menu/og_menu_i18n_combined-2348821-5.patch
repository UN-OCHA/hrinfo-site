commit 787fe4ef2aac04b0eb1ac920f66ada2eb686b6c1
Author: Scott Jordison <scott_jordison@gov.nt.ca>
Date:   Wed Feb 4 12:15:20 2015 -0700

    i18n translation

diff --git a/og_menu.admin.inc b/og_menu.admin.inc
index 5be7ac6..eecd418 100644
--- a/og_menu.admin.inc
+++ b/og_menu.admin.inc
@@ -121,6 +121,20 @@ function og_menu_config_form($form, &$form_state) {
     );
   }
 
+  if (module_exists('i18n_menu')) {
+    $form['i18n'] = array(
+      '#type' => 'fieldset',
+      '#title' => t('Internationalization'),
+    );
+    $form['i18n']['og_menu_default_i18n_mode'] = array(
+      '#type' => 'radios',
+      '#title' => t('Default translation mode for new menus'),
+      '#options' => i18n_translation_options('menu'),
+      '#default_value' => variable_get('og_menu_default_i18n_mode', I18N_MODE_NONE),
+      '#description' => t('For localizable elements, to have all items available for translation visit the <a href="@locale-refresh">translation refresh</a> page.', array('@locale-refresh' => url('admin/config/regional/translate/i18n_string'))),
+    );
+  }
+
   return system_settings_form($form);
 }
 
diff --git a/og_menu.install b/og_menu.install
index 19db136..ca0042f 100644
--- a/og_menu.install
+++ b/og_menu.install
@@ -249,4 +249,17 @@ function og_menu_update_7305(&$sandbox) {
       'default' => 0,
     ));
   }
+}
+
+/**
+ * Set translation settings at OG menus.
+ */
+function og_menu_update_7306(&$sandbox) {
+  if (module_exists('i18n_menu')) {
+    db_update('menu_custom')
+      ->fields(array('i18n_mode' => variable_get('og_menu_default_i18n_mode', I18N_MODE_NONE)))
+      ->condition('menu_name', 'menu-og-%', 'LIKE')
+      ->condition('i18n_mode', '0')
+      ->execute();
+  }
 }
\ No newline at end of file
diff --git a/og_menu.module b/og_menu.module
index 4b6045e..d91ffcc 100644
--- a/og_menu.module
+++ b/og_menu.module
@@ -255,11 +255,16 @@ function og_menu_block_view($delta = '') {
     $menu = array_shift($menus);
 
     if ($menu) {
+      $title = $menu['title'];
+      if (function_exists('i18n_string') && module_exists('i18n_menu')) {
+        $title = filter_xss(i18n_string('menu:menu:menu-og-' . $context['gid'] . ':title', $title, array('sanitize' => FALSE)));
+      }
+
       if (variable_get('og_menu_block_links', FALSE)) {
-        $block['subject'] = l($menu['title'], $menu['group_type'] . '/' . $menu['gid']);
+        $block['subject'] = l($title, $menu['group_type'] . '/' . $menu['gid']);
       }
       else {
-        $block['subject'] = check_plain($menu['title']);
+        $block['subject'] = $title;
       }
       $block['content'] = menu_tree($menu['menu_name']);
       // Add contextual links.
@@ -279,9 +284,13 @@ function og_menu_block_view($delta = '') {
     $block['content'] = '';
 
     foreach ($menus as $menu) {
-      $title = check_plain($menu['title']);
+      $menu_title = $menu['title'];
+      if (function_exists('i18n_string') && module_exists('i18n_menu')) {
+        $menu_title = filter_xss(i18n_string('menu:menu:menu-og-' . $context['gid'] . ':title', $menu_title, array('sanitize' => FALSE)));
+      }
+      $title = $menu_title;
       if (variable_get('og_menu_block_links', FALSE)) {
-        $title = l($menu['title'], $menu['group_type'] . '/' . $menu['gid']);
+        $title = l($menu_title, $menu['group_type'] . '/' . $menu['gid']);
       }
       if ($tree = menu_tree($menu['menu_name'])) {
         if ($plural) {
@@ -790,11 +799,15 @@ function og_menu_node_prepare($node) {
 function og_menu_node_insert($node) {
   if (og_is_group('node', $node)) {
     if (isset($node->og_menu) && $node->og_menu) {
-      menu_save(array(
+      $menu = array(
         'menu_name' => 'menu-og-' . $node->nid,
         'title' => $node->title,
         'description' => t('OG Menu for') . ' ' . check_plain($node->title),
-      ));
+      );
+      if (module_exists('i18n_menu')) {
+        $menu['i18n_mode'] = variable_get('og_menu_default_i18n_mode', I18N_MODE_NONE);
+      }
+      menu_save($menu);
       og_menu_update_menu('menu-og-' . $node->nid, $node->nid, 'node');
     }
   }
@@ -809,11 +822,15 @@ function og_menu_node_update($node) {
       if ($node->og_menu) {
         $menu = og_menu_get_group_menus(array('node' => array($node->nid)));
         if (empty($menu)) {
-          menu_save(array(
+          $menu = array(
             'menu_name' => 'menu-og-' . $node->nid,
             'title' => $node->title,
             'description' => t('OG Menu for') . ' ' . check_plain($node->title),
-          ));
+          );
+          if (module_exists('i18n_menu')) {
+            $menu['i18n_mode'] = variable_get('og_menu_default_i18n_mode', I18N_MODE_NONE);
+          }
+          menu_save($menu);
           og_menu_update_menu('menu-og-' . $node->nid, $node->nid, 'node');
         }
       }
@@ -1301,3 +1318,25 @@ function _og_menu_add_menufieldset(&$form, $options) {
     '#description' => t('Menu links with smaller weights are displayed before links with larger weights.'),
   );
 }
+
+/**
+ * Implements hook_translated_menu_link_alter().
+ */
+function og_menu_translated_menu_link_alter(&$link) {
+  // i18n_menu will mark items as disabled on the og menu overview and edit
+  // forms. This can cause menu links to be disabled when saving the form of
+  // a translated menu. i18n_menu already checks not to do this on the
+  // admin/structure/menu pages and uses this flag to check whether it has
+  // processed a link already or not.
+  if (module_exists('i18n_menu')) {
+    // Skip if administering this menu or this menu item.
+    if (arg(0) == 'group' && arg(3) == 'admin' && arg(4) == 'menus') {
+      if ($link['menu_name'] == arg(5)) {
+        $link['i18n_menu'] = TRUE;
+      }
+      elseif (arg(6) == 'item' && arg(7) == $link['mlid']) {
+        $link['i18n_menu'] = TRUE;
+      }
+    }
+  }
+}
diff --git a/og_menu.pages.inc b/og_menu.pages.inc
index 4418b6a..06523e2 100644
--- a/og_menu.pages.inc
+++ b/og_menu.pages.inc
@@ -160,6 +160,14 @@ function og_menu_edit_menu_form($form, &$form_state, $type, $group_type, $gid, $
       '#value' => $menu['menu_name'],
     );
   }
+
+  if (module_exists('i18n_menu')) {
+    $i18n_mode = $menu && isset($menu['i18n_mode']) ? $menu['i18n_mode'] : I18N_MODE_NONE;
+    $langcode = $menu && isset($menu['language']) ? $menu['language'] : LANGUAGE_NONE;
+
+    $form += i18n_translation_mode_element('menu', $i18n_mode, $langcode);
+  }
+
   // Add submit handlers.
   $form['#submit'][] = 'menu_edit_menu_submit';
   $form['#submit'][] = 'og_menu_edit_menu_form_submit';
@@ -224,6 +232,12 @@ function og_menu_overview_form($form, &$form_state, $group_type, $gid, $menu) {
       $form[$mlid]['operations'] = $operations;
     }
   }
+  if (module_exists('i18n_menu')) {
+    i18n_menu_form_menu_overview_form_alter($form, $form_state);
+  }
+  if (module_exists('menu_token')) {
+    menu_token_form_menu_overview_form_alter($form, $form_state);
+  }
   return $form;
 }
 
@@ -259,7 +273,7 @@ function og_menu_delete_menu_confirm($form, &$form_state, $menu, $group_type, $g
  * Form callback; Build the menu link editing form.
  */
 function og_menu_edit_item_form($form, &$form_state, $type, $group_type, $gid, $menu, $item = array()) {
-  module_load_include('inc', 'menu', 'menu.admin');
+  form_load_include($form_state, 'inc', 'menu', 'menu.admin');
   $form = menu_edit_item($form, $form_state, $type, $item, $menu);
   // Set the breadcrumb now to override menu_edit_item() breadcrumb.
   og_set_breadcrumb($group_type, $gid, array(l(t('Group'), "$group_type/$gid/group")));
@@ -314,6 +328,16 @@ function og_menu_edit_item_form($form, &$form_state, $type, $group_type, $gid, $
      mpac_form_menu_edit_item_alter($form, $form_state);
   }
 
+  // Integrate with i18n module if installed.
+  if (module_exists('i18n_menu')) {
+    i18n_menu_form_menu_edit_item_alter($form, $form_state);
+  }
+
+  // Integrate with menu_token if installed.
+  if (module_exists('menu_token')) {
+    menu_token_form_menu_edit_item_alter($form, $form_state);
+  }
+
   return $form;
 }
 
diff --git a/og_menu.patch b/og_menu.patch
new file mode 100644
index 0000000..e69de29
