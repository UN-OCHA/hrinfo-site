<?php

/**
 * @file
 * Install file for hr_core.
 */

/**
 * Uninstall multisite redirect module.
 */
function hr_core_update_7001() {
  // We need to handle the top redirects using the redirect module instead.
  $query = db_select('multisite_redirect')
    ->fields('multisite_redirect', array('source_site', 'redirect'))
    ->condition('source_path', '<front>');
  $result = $query->execute();
  $base_fields = $result->fetchAllKeyed();


  $query = db_select('multisite_redirect')
    ->fields('multisite_redirect', array('source_site', 'source_path', 'redirect'))
    ->condition('source_path', '<front>', '<>')
    ->condition('access', '1429351251', '>')
    ->condition('count', 5, '>');
  $result = $query->execute();
  $redirects = $result->fetchAll();

  $languages = language_list();

  foreach ($redirects as $redirect) {
    $source_site = _hr_core_install_remove_language_url($languages, urldecode($base_fields[$redirect->source_site]));

    if ($source_site_path = drupal_lookup_path('source', $source_site)) {
      $source = $source_site_path . '/' . urldecode($redirect->source_path);
    }
    else {
      $source = $source = $source_site . '/' . urldecode($redirect->source_path);
    }

    $destination =  _hr_core_install_remove_language_url($languages, urldecode($redirect->redirect));
    if ($dest_path = drupal_lookup_path('source', $destination)) {
      $destination = $dest_path;
    }
    $redirect = new stdClass();

    redirect_object_prepare(
      $redirect,
      array(
        'source' => $source,
        'source_options' => array(),
        'redirect' => $destination,
        'redirect_options' => array(),
        'language' => LANGUAGE_NONE,
      )
    );

    $hash = redirect_hash($redirect);
    $existing = redirect_load_by_hash($hash);
    if (!$existing) {
      redirect_save($redirect);
    }

  }
  redirect_page_cache_clear();

  if( module_exists('multisite_redirect')) {
    variable_del('multisite_redirect_primary_site');
    variable_del('multisite_redirect_exclusions');
    module_disable(array('multisite_redirect'));
    drupal_uninstall_modules(array('multisite_redirect'));
  }
}

/**
 * Helper function to remove the language from the front of the string.
 */
function _hr_core_install_remove_language_url($languages, $string) {
  // We need to clean out the language from the urls.
  foreach ($languages as $key => $language) {
    if (strpos($string, $key) === 0) {
      return str_replace($key . '/', '', $string);
    }
  }
  return $string;
}

/**
 * Enable elysia cron and set cron runs to 1h.
 */
function hr_core_update_7002() {
  module_enable(array('elysia_cron'));
  variable_set('cron_safe_threshold', 60);
}

/**
 * Enable entitycache.
 */
function hr_core_update_7003() {
  if (!module_exists('entitycache')) {
    module_enable(array('entitycache'));
  }
}

/**
 * Enable environment indicator.
 */
function hr_core_update_7004() {
  if (!module_exists('environment_indicator')) {
    module_enable(array('environment_indicator'));
  }

  // Disable git branch support.
  variable_set('environment_indicator_git_support', FALSE);

  // Add staging.
  if (!ctools_export_crud_load('environment_indicator_environment', 'hr_test')) {
    $environment = ctools_export_crud_new('environment_indicator_environment', TRUE);
    $environment->api_version = 1;
    $environment->disabled = FALSE;
    $environment->machine = 'hr_test';
    $environment->name = t('HR Test');
    $environment->regexurl = 'hrtest.568elmp02.blackmesh.com';
    $environment->settings = array(
      'color' => '#146205',
      'text_color' => '#ffffff',
      'weight' => 99,
      'position' => 'top',
      'fixed' => FALSE,
    );

    ctools_export_crud_save('environment_indicator_environment', $environment);
  }

  // Add production.
  if (!ctools_export_crud_load('environment_indicator_environment', 'hr_info')) {
    $environment = ctools_export_crud_new('environment_indicator_environment', TRUE);
    $environment->api_version = 1;
    $environment->disabled = FALSE;
    $environment->machine = 'hr_info';
    $environment->name = t('HR Live');
    $environment->regexurl = 'www.humanitarianresponse.info';
    $environment->settings = array(
      'color' => '#0c17c1',
      'text_color' => '#ffffff',
      'weight' => 99,
      'position' => 'top',
      'fixed' => FALSE,
    );

    ctools_export_crud_save('environment_indicator_environment', $environment);
  }
}

/**
 * Change the hostname on the staging site environment indicator.
 */
function hr_core_update_7005() {
  // Update staging.
  $environment = ctools_export_crud_load('environment_indicator_environment', 'hr_test');
  $environment->regexurl = 'hrinfo.568elmp03.blackmesh.com';
  ctools_export_crud_save('environment_indicator_environment', $environment);
}

/**
 * Enable node clone module.
 */
function hr_core_update_7006() {
  module_enable(array('clone'));
}

/**
 * Enable field_extrawidgets module.
 */
function hr_core_update_7007() {
  module_enable(array('field_extrawidgets'));
}

/**
 * Fix panels caching.
 */
function hr_core_update_7008() {
  _hr_core_pane_cache_content_by_type('hr_documents_key_documents', '', array('hr_document' => 'hr_document'));
  _hr_core_pane_cache_content_by_type('hr_infographics_key_infographics', '', array('hr_infographic' => 'hr_infographic'));
  _hr_core_pane_cache_content_by_type('hr_contacts_key_contacts', '', array('hr_contact' => 'hr_contact'));

  _hr_core_pane_cache_content_by_type('views_panes', 'hr_documents_panes-list', array('hr_document' => 'hr_document'));
  _hr_core_pane_cache_content_by_type('views_panes', 'hr_documents_panes-mm_from_context', array('hr_document' => 'hr_document'));
  _hr_core_pane_cache_content_by_type('views_panes', 'hr_documents_panes-documents_from_context', array('hr_document' => 'hr_document'));
  _hr_core_pane_cache_content_by_type('views_panes', 'hr_documents_panes-thumbnail', array('hr_document' => 'hr_document'));

  _hr_core_pane_cache_content_by_type('views_panes', 'hr_assessments_panes-panel_pane_1', array('hr_assessment' => 'hr_assessment'));
  _hr_core_pane_cache_content_by_type('views_panes', 'hr_assessments_panes-list', array('hr_assessment' => 'hr_assessment'));

  _hr_core_pane_cache_content_by_type('views_panes', 'hr_infographics_panes-infographics_from_context', array('hr_infographic' => 'hr_infographic'));
  _hr_core_pane_cache_content_by_type('views_panes', 'hr_infographics_panes-list', array('hr_infographic' => 'hr_infographic'));

  _hr_core_pane_cache_content_by_type('views_panes', 'hr_events_panes-upcoming', array('hr_event' => 'hr_event'));
  _hr_core_pane_cache_content_by_type('views_panes', 'hr_events_panes-upcoming_from_context', array('hr_event' => 'hr_event'));

  _hr_core_pane_cache_content_by_type('views_panes', 'hr_news_panes-list', array('hr_news' => 'hr_news'));
  _hr_core_pane_cache_content_by_type('views_panes', 'hr_contacts_panes-list', array('hr_contact' => 'hr_contact'));
}

/**
 * Fix panels caching - part 2.
 */
function hr_core_update_7009() {
  hr_core_update_7008();
  _hr_core_pane_cache_content_by_type('hr_layout_standard', '', array('hr_document' => 'hr_document', 'hr_operation' => 'hr_operation'));
  _hr_core_pane_cache_simple('hr_layout_reliefweb');
  _hr_core_pane_cache_simple('hid_profiles_list');
  _hr_core_pane_cache_simple('hr_layout_rss_feeds');
  _hr_core_pane_cache_simple('twitter', '', 30);
  _hr_core_pane_cache_simple('bean_pane', 'fts_visualization', 60);
  _hr_core_pane_cache_simple('bean_pane', 'existing_bean');
  _hr_core_pane_cache_simple('block', 'j2h-j2h_4w', 15);
}

/**
 * Fix panels caching - displays.
 */
function hr_core_update_7010() {
  _hr_core_display_cache_simple();
}
