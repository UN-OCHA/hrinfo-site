<?php
/**
 * @file
 * Code for the Reliefweb integration.
 */

/**
 * Implements hook_ctools_plugin_directory().
 */
function hr_reliefweb_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && $plugin == 'content_types') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implements hook_menu()
 */
function hr_reliefweb_menu() {
  $items = array();

  $items['node/%node/reliefweb'] = array(
    'title' => 'Reliefweb documents',
    'page callback' => 'hr_reliefweb_document_list',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'file' => 'hr_reliefweb.pages.inc',
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function hr_reliefweb_theme($existing, $type, $theme, $path) {
  $theme = array();

  $theme['hr_reliefweb_overview'] = array(
    'template' => 'hr-reliefweb-overview',
    'path' => drupal_get_path('module', 'hr_reliefweb') . '/templates',
    'variables' => array(
      'contents' => array(),
      'summary' => NULL,
      'clearall' => NULL,
      'removefacets' => NULL,
      'facets' => NULL,
      'data' => NULL,
      'pager' => NULL,
    ),
   );

  return $theme;
}

/**
 * Allowed filters.
 */
function hr_reliefweb_get_filters($key = NULL) {
  $filters = array(
    'source.name' => t('Organisation'),
    'theme.name' => t('Theme'),
    'format.name' => t('Document type'),
    'disaster_type' => t('Disaster type'),
    'vulnerable_groups.name' => t('Vulnerable group'),
    'language.name' => t('Language'),
    'date.changed' => t('Date'),
  );

  if ($key) {
    return $filters[$key];
  }
  else {
    return $filters;
  }
}

/**
 * Fetch documents from Reliefweb.
 */
function hr_reliefweb_fetch_documents($country, $limit = 0, $offset = 0, $filters = array()) {
  $endpoint = 'https://api.reliefweb.int/v1/reports';
  $params = array(
    'appname' => 'hrinfo',
    'offset' => $offset,
    'limit' => $limit,
    'preset' => 'latest',

    'filter' => array(
      'operator' => 'AND',
      'conditions' => array(
        array(
          'field' => 'country.iso3',
          'value' => $country,
          'operator' => 'OR',
        ),
        array(
          'field' => 'format.name',
          'value' => 'News and Press Release',
          'operator' => 'OR',
          'negate' => TRUE,
        ),
      ),
    ),

    'fields[include]' => array(
      'disaster_type.name',
      'url',
      'title',
      'date.changed',
      'source.name',
      'country.name',
      'file.url',
      'file.preview.url-thumb',
      'format.name',
    ),
  );

  if (!empty($filters)) {
    $params['filter']['conditions'] = array_merge($params['filter']['conditions'], $filters);
  }

  $allowed_filters = hr_reliefweb_get_filters();
  foreach ($allowed_filters as $key => $allowed_filter) {
    // Date is a special case, needs an interval.
    if (strpos($key, 'date') !== FALSE) {
      $params['facets'][] = array(
        'field' => $key,
        'interval' => 'year',
      );
    }
    else {
      $params['facets'][] = array(
        'field' => $key,
        'limit' => 20,
      );
    }
  }

  $url = $endpoint . '?' . drupal_http_build_query($params);

  return hr_reliefweb_content($url);
}

/**
*  Function to return content given an api path.
*/
function hr_reliefweb_content($path) {
  $data_array = array();
  $total_count = 0;
  $facets = array();

  $request = drupal_http_request($path);
  if (isset($request->data)) {
    $response = drupal_json_decode($request->data);
    $total_count = $response['totalCount'];
    $facets = $response['embedded']['facets'];

    $data = $response['data'];
    foreach ($data as $value) {
      $url = $value['fields']['url'];
      $title = isset($value['fields']['title']) ? $value['fields']['title'] : $value['fields']['name'];
      $data_array[$title] = array(
        'title' => $title,
        'url' => $url,
        'date_changed' => $value['fields']['date']['changed'],
        'format' => $value['fields']['format'][0]['name'],
      );

      if (isset($value['fields']['source'])) {
        $sources = array();
        foreach ($value['fields']['source'] as $source) {
          $sources[] = $source['name'];
        }
        $data_array[$title]['sources'] = $sources;
      }

      if (isset($value['fields']['disaster_type'])) {
        $disaster_types = array();
        foreach ($value['fields']['disaster_type'] as $disaster_type) {
          $disaster_types[] = $disaster_type['name'];
        }
        $data_array[$title]['disaster_types'] = $disaster_types;
      }

      if (isset($value['fields']['country'])) {
        $countries = array();
        foreach ($value['fields']['country'] as $country) {
          $countries[] = $country['name'];
        }
        $data_array[$title]['countries'] = $countries;
      }

      if (isset($value['fields']['file'])) {
        $files = array();
        foreach ($value['fields']['file'] as $file) {
          $files[] = array(
            'preview' => isset($file['preview']['url-thumb']) ? str_replace('#', '%23', str_replace(' ', '%20', $file['preview']['url-thumb'])) : '',
            'url' => str_replace(' ', '%20', $file['url']),
          );
        }
        $data_array[$title]['files'] = $files;
      }

    }
  }

  return array(
    'data' => $data_array,
    'facets' => $facets,
    'total' => $total_count,
  );
}
