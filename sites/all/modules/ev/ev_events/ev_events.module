<?php
/**
 * @file
 * Code for the external events feature.
 */

/**
 * Implements hook_ctools_plugin_directory()
 */
function ev_events_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && $plugin == 'content_types') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implements hook_og_features_registry()
 */
function ev_events_og_features_registry() {
  $registry = array();
  $feature = new stdClass();
  $feature->id = 'ev_events';
  $feature->name = 'Humanitarian Events';
  $feature->description = t('Provide Humanitarian Events to your space.');
  $feature->components = array(
    'path' => array(
      'node/%node/humanitarian-events',
    ),
  );
  $registry[$feature->id] = $feature;
  return $registry;
}

/**
 * Implements hook_menu()
 */
function ev_events_menu() {
  $items = array();

  $items['node/%node/humanitarian-events'] = array(
    'title' => 'Humanitarian Events',
    'page callback' => 'ev_events_calendar',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'file' => 'ev_events.pages.inc',
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function ev_events_theme($existing, $type, $theme, $path) {
  $theme = array();

  $theme['ev_events_calendar'] = array(
    'template' => 'ev-events-calendar',
    'path' => drupal_get_path('module', 'ev_events') . '/templates',
    'variables' => array(
      'contents' => array(),
      'summary' => NULL,
      'clearall' => NULL,
      'removefacets' => NULL,
      'facets' => NULL,
      'data' => NULL,
      'pager' => NULL,
    ),
   );

  return $theme;
}

/**
 * Implements hook_js_alter().
 */
function ev_events_js_alter(&$javascript) {
  // Remove fullcalendar javascript.
  if (isset($javascript['sites/all/modules/contrib/fullcalendar_api/fullcalendar_calendar.js'])) {
    unset($javascript['sites/all/modules/contrib/fullcalendar_api/fullcalendar_calendar.js']);
  }
}

/**
 * Fetch clusters.
 */
function ev_events_fetch_clusters() {
  $items = array();

  $now = new DateTime();
  $api_base_url = variable_get('ev_events_api_url', 'https://events.staging.humanitarianresponse.info');

  $api_url = $api_base_url . '/api/v0/clusters';
  $params = array(
    'start' => $now->format('Y-m-d'),
  );

  $url = $api_url . '?' . drupal_http_build_query($params);
  $request = drupal_http_request($url);
  if (isset($request->data)) {
    $clusters = drupal_json_decode($request->data);

    foreach ($clusters as $cluster) {
      $items[$cluster['tid']] = $cluster['name'];
    }
  }

  return $items;
}
