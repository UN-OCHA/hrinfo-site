diff --git a/sites/all/modules/contrib/og_variables/og_variables.class.inc b/sites/all/modules/contrib/og_variables/og_variables.class.inc
index 897bd449..ea21f28a 100644
--- a/sites/all/modules/contrib/og_variables/og_variables.class.inc
+++ b/sites/all/modules/contrib/og_variables/og_variables.class.inc
@@ -30,7 +30,16 @@ class OgVariableRealm extends VariableRealmDefaultController {
     $realms = array();
     foreach (og_get_all_group($this->entity_type) as $entity_id) {
       $entity = current(entity_load($this->entity_type, array($entity_id)));
-      if (entity_access('update', $this->entity_type, $entity)) {
+
+      // A group *can* reference a deleted node. In that case, calling
+      // entity_access() will cause an exception and a WSOD. Check if the
+      // entity is an object, so we can write a log entry and skip it it
+      // is not, rather than WSOD. This way, the node will automagically
+      // not end up in the realms array, and no functionality is broken.
+      if (!is_object($entity)) {
+        watchdog('og_variables', 'Unable to load @entity_type @entity_id', array('@entity_type' => $this->entity_type, '@entity_id'=> $entity_id), WATCHDOG_ERROR);
+      }
+      else if (entity_access('update', $this->entity_type, $entity)) {
         $label = entity_label($this->entity_type, $entity);
         $realms[$this->makeRequestKey($this->entity_type, $entity_id)] = $label;
       }
